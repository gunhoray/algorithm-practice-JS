iteration and loops provide a way to repeatedly execute blocks of code. 
There are several types of loops in JavaScript:

For Loop: The for loop is the most common type of loop. It runs for a specific number of times, defined in the loop declaration.
for (let i = 0; i < 5; i++) {
    console.log(i); // This will print numbers 0 through 4.
}


While Loop: The while loop continues as long as the specified condition evaluates to true.
let i = 0;
while (i < 5) {
    console.log(i); // This will print numbers 0 through 4.
    i++;
}


Do-While Loop: The do-while loop is similar to the while loop, 
but it guarantees the execution of the code block at least once because it checks the condition after executing the block.
let i = 0;
do {
    console.log(i); // This will print numbers 0 through 4.
    i++;
} while (i < 5);


For-In Loop: The for-in loop is used to iterate over properties of an object or elements in an array.
const obj = {a:1, b:2, c:3};
for (let prop in obj) {
   console.log(`${prop}: ${obj[prop]}`); 
   // This will print "a:1", "b:2", and "c:3".
}


For-Of Loop: Introduced in ES6/ES2015, this type of loop can be used on iterable objects such as arrays, strings, maps etc.
const arr = [10,20,30];
for (let value of arr) {
   console.log(value); 
   // This will print "10", "20", and "30".
}

These looping structures allow you to automate repetitive tasks within your programs.

코딩에서 "반복문"은 영어로 "Loop" 또는 "Iteration"이라고 번역할 수 있습니다. 
특정한 종류의 반복문을 지칭하는 경우에는 다음과 같이 번역됩니다:

for문: For Loop
while문: While Loop
do-while문: Do-While Loop